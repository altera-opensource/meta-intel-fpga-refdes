From 3a22cc70ef3b862d083b208771c6dfe4fda03edf Mon Sep 17 00:00:00 2001
From: "Tham, Mun Yew" <mun.yew.tham@intel.com>
Date: Tue, 4 Jun 2024 19:03:11 +0800
Subject: [PATCH 3/4] Revert "net: mdio: Introduce a regmap-based mdio driver"

This reverts commit 642af0f92cbe01c4b05eb38a0fe94867a3798b34.
---
 MAINTAINERS                      |  7 ---
 drivers/net/mdio/Kconfig         | 11 ----
 drivers/net/mdio/Makefile        |  1 -
 drivers/net/mdio/mdio-regmap.c   | 93 --------------------------------
 include/linux/mdio/mdio-regmap.h | 26 ---------
 5 files changed, 138 deletions(-)
 delete mode 100644 drivers/net/mdio/mdio-regmap.c
 delete mode 100644 include/linux/mdio/mdio-regmap.h

diff --git a/MAINTAINERS b/MAINTAINERS
index d5cdb56f833e..a1c5d124f894 100644
--- a/MAINTAINERS
+++ b/MAINTAINERS
@@ -13047,13 +13047,6 @@ F:	Documentation/devicetree/bindings/net/ieee802154/mcr20a.txt
 F:	drivers/net/ieee802154/mcr20a.c
 F:	drivers/net/ieee802154/mcr20a.h
 
-MDIO REGMAP DRIVER
-M:	Maxime Chevallier <maxime.chevallier@bootlin.com>
-L:	netdev@vger.kernel.org
-S:	Maintained
-F:	drivers/net/mdio/mdio-regmap.c
-F:	include/linux/mdio/mdio-regmap.h
-
 MEASUREMENT COMPUTING CIO-DAC IIO DRIVER
 M:	William Breathitt Gray <william.gray@linaro.org>
 L:	linux-iio@vger.kernel.org
diff --git a/drivers/net/mdio/Kconfig b/drivers/net/mdio/Kconfig
index 4a7a303be2f7..9ff2e6f22f3f 100644
--- a/drivers/net/mdio/Kconfig
+++ b/drivers/net/mdio/Kconfig
@@ -185,17 +185,6 @@ config MDIO_IPQ8064
 	  This driver supports the MDIO interface found in the network
 	  interface units of the IPQ8064 SoC
 
-config MDIO_REGMAP
-	tristate
-	help
-	  This driver allows using MDIO devices that are not sitting on a
-	  regular MDIO bus, but still exposes the standard 802.3 register
-	  layout. It's regmap-based so that it can be used on integrated,
-	  memory-mapped PHYs, SPI PHYs and so on. A new virtual MDIO bus is
-	  created, and its read/write operations are mapped to the underlying
-	  regmap. Users willing to use this driver must explicitly select
-	  REGMAP.
-
 config MDIO_THUNDER
 	tristate "ThunderX SOCs MDIO buses"
 	depends on 64BIT
diff --git a/drivers/net/mdio/Makefile b/drivers/net/mdio/Makefile
index 1015f0db4531..7d4cb4c11e4e 100644
--- a/drivers/net/mdio/Makefile
+++ b/drivers/net/mdio/Makefile
@@ -19,7 +19,6 @@ obj-$(CONFIG_MDIO_MOXART)		+= mdio-moxart.o
 obj-$(CONFIG_MDIO_MSCC_MIIM)		+= mdio-mscc-miim.o
 obj-$(CONFIG_MDIO_MVUSB)		+= mdio-mvusb.o
 obj-$(CONFIG_MDIO_OCTEON)		+= mdio-octeon.o
-obj-$(CONFIG_MDIO_REGMAP)		+= mdio-regmap.o
 obj-$(CONFIG_MDIO_SUN4I)		+= mdio-sun4i.o
 obj-$(CONFIG_MDIO_THUNDER)		+= mdio-thunder.o
 obj-$(CONFIG_MDIO_XGENE)		+= mdio-xgene.o
diff --git a/drivers/net/mdio/mdio-regmap.c b/drivers/net/mdio/mdio-regmap.c
deleted file mode 100644
index 8a742a8d6387..000000000000
--- a/drivers/net/mdio/mdio-regmap.c
+++ /dev/null
@@ -1,93 +0,0 @@
-// SPDX-License-Identifier: GPL-2.0-or-later
-/* Driver for MMIO-Mapped MDIO devices. Some IPs expose internal PHYs or PCS
- * within the MMIO-mapped area
- *
- * Copyright (C) 2023 Maxime Chevallier <maxime.chevallier@bootlin.com>
- */
-#include <linux/bitfield.h>
-#include <linux/delay.h>
-#include <linux/mdio.h>
-#include <linux/module.h>
-#include <linux/of.h>
-#include <linux/of_mdio.h>
-#include <linux/phy.h>
-#include <linux/platform_device.h>
-#include <linux/regmap.h>
-#include <linux/mdio/mdio-regmap.h>
-
-#define DRV_NAME "mdio-regmap"
-
-struct mdio_regmap_priv {
-	struct regmap *regmap;
-	u8 valid_addr;
-};
-
-static int mdio_regmap_read_c22(struct mii_bus *bus, int addr, int regnum)
-{
-	struct mdio_regmap_priv *ctx = bus->priv;
-	unsigned int val;
-	int ret;
-
-	if (ctx->valid_addr != addr)
-		return -ENODEV;
-
-	ret = regmap_read(ctx->regmap, regnum, &val);
-	if (ret < 0)
-		return ret;
-
-	return val;
-}
-
-static int mdio_regmap_write_c22(struct mii_bus *bus, int addr, int regnum,
-				 u16 val)
-{
-	struct mdio_regmap_priv *ctx = bus->priv;
-
-	if (ctx->valid_addr != addr)
-		return -ENODEV;
-
-	return regmap_write(ctx->regmap, regnum, val);
-}
-
-struct mii_bus *devm_mdio_regmap_register(struct device *dev,
-					  const struct mdio_regmap_config *config)
-{
-	struct mdio_regmap_priv *mr;
-	struct mii_bus *mii;
-	int rc;
-
-	if (!config->parent)
-		return ERR_PTR(-EINVAL);
-
-	mii = devm_mdiobus_alloc_size(config->parent, sizeof(*mr));
-	if (!mii)
-		return ERR_PTR(-ENOMEM);
-
-	mr = mii->priv;
-	mr->regmap = config->regmap;
-	mr->valid_addr = config->valid_addr;
-
-	mii->name = DRV_NAME;
-	strscpy(mii->id, config->name, MII_BUS_ID_SIZE);
-	mii->parent = config->parent;
-	mii->read = mdio_regmap_read_c22;
-	mii->write = mdio_regmap_write_c22;
-
-	if (config->autoscan)
-		mii->phy_mask = ~BIT(config->valid_addr);
-	else
-		mii->phy_mask = ~0;
-
-	rc = devm_mdiobus_register(dev, mii);
-	if (rc) {
-		dev_err(config->parent, "Cannot register MDIO bus![%s] (%d)\n", mii->id, rc);
-		return ERR_PTR(rc);
-	}
-
-	return mii;
-}
-EXPORT_SYMBOL_GPL(devm_mdio_regmap_register);
-
-MODULE_DESCRIPTION("MDIO API over regmap");
-MODULE_AUTHOR("Maxime Chevallier <maxime.chevallier@bootlin.com>");
-MODULE_LICENSE("GPL");
diff --git a/include/linux/mdio/mdio-regmap.h b/include/linux/mdio/mdio-regmap.h
deleted file mode 100644
index 679d9069846b..000000000000
--- a/include/linux/mdio/mdio-regmap.h
+++ /dev/null
@@ -1,26 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-/* Driver for MMIO-Mapped MDIO devices. Some IPs expose internal PHYs or PCS
- * within the MMIO-mapped area
- *
- * Copyright (C) 2023 Maxime Chevallier <maxime.chevallier@bootlin.com>
- */
-#ifndef MDIO_REGMAP_H
-#define MDIO_REGMAP_H
-
-#include <linux/phy.h>
-
-struct device;
-struct regmap;
-
-struct mdio_regmap_config {
-	struct device *parent;
-	struct regmap *regmap;
-	char name[MII_BUS_ID_SIZE];
-	u8 valid_addr;
-	bool autoscan;
-};
-
-struct mii_bus *devm_mdio_regmap_register(struct device *dev,
-					  const struct mdio_regmap_config *config);
-
-#endif
-- 
2.25.1

