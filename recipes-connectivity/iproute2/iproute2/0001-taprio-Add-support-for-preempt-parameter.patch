From ff76e1d70f0ae89bb01ee010f75a8d08d0370c35 Mon Sep 17 00:00:00 2001
From: "Swee, Leong Ching" <leong.ching.swee@intel.com>
Date: Tue, 23 May 2023 14:15:12 +0800
Subject: [PATCH] preempt param

Upstream-Status: Pending

---
 include/uapi/linux/pkt_sched.h |  2 ++
 tc/q_taprio.c                  | 33 ++++++++++++++++++++++++++++++++-
 2 files changed, 34 insertions(+), 1 deletion(-)

diff --git a/include/uapi/linux/pkt_sched.h b/include/uapi/linux/pkt_sched.h
index 3f85ae57..b178eb39 100644
--- a/include/uapi/linux/pkt_sched.h
+++ b/include/uapi/linux/pkt_sched.h
@@ -755,6 +755,7 @@ enum {
 	TCA_MQPRIO_MIN_RATE64,
 	TCA_MQPRIO_MAX_RATE64,
 	TCA_MQPRIO_TC_ENTRY,
+	TCA_MQPRIO_PREEMPT_TCS,
 	__TCA_MQPRIO_MAX,
 };
 
@@ -1284,6 +1285,7 @@ enum {
 	TCA_TAPRIO_ATTR_FLAGS, /* u32 */
 	TCA_TAPRIO_ATTR_TXTIME_DELAY, /* u32 */
 	TCA_TAPRIO_ATTR_TC_ENTRY, /* nest */
+	TCA_TAPRIO_ATTR_PREEMPT_TCS, /* u32 */
 	__TCA_TAPRIO_ATTR_MAX,
 };
 
diff --git a/tc/q_taprio.c b/tc/q_taprio.c
index ef8fc7a0..98faf332 100644
--- a/tc/q_taprio.c
+++ b/tc/q_taprio.c
@@ -186,6 +186,7 @@ static int taprio_parse_opt(struct qdisc_util *qu, int argc,
 	struct tc_mqprio_qopt opt = { };
 	__s64 cycle_time_extension = 0;
 	struct list_head sched_entries;
+	__u32 preempt = UINT32_MAX;
 	bool have_tc_entries = false;
 	int num_max_sdu_entries = 0;
 	struct rtattr *tail, *l;
@@ -361,7 +362,16 @@ static int taprio_parse_opt(struct qdisc_util *qu, int argc,
 				PREV_ARG();
 				return -1;
 			}
-
+		} else if (strcmp(*argv, "preempt") == 0) {
+			NEXT_ARG();
+			if (preempt != UINT32_MAX) {
+				fprintf(stderr, "taprio: duplicate \"preempt\" specification\n");
+				return -1;
+			}
+			if (get_u32(&preempt, *argv, 2)) {
+				PREV_ARG();
+				return -1;
+			}
 		} else if (strcmp(*argv, "help") == 0) {
 			explain();
 			return -1;
@@ -398,6 +408,10 @@ static int taprio_parse_opt(struct qdisc_util *qu, int argc,
 		addattr_l(n, 1024, TCA_TAPRIO_ATTR_SCHED_CYCLE_TIME_EXTENSION,
 			  &cycle_time_extension, sizeof(cycle_time_extension));
 
+	if (preempt != UINT32_MAX)
+		addattr_l(n, 1024, TCA_TAPRIO_ATTR_PREEMPT_TCS,
+			  &preempt, sizeof(preempt));
+
 	if (have_tc_entries)
 		add_tc_entries(n, max_sdu, num_max_sdu_entries, fp, num_fp_entries);
 
@@ -592,6 +606,7 @@ static int taprio_print_opt(struct qdisc_util *qu, FILE *f, struct rtattr *opt)
 {
 	struct rtattr *tb[TCA_TAPRIO_ATTR_MAX + 1];
 	struct tc_mqprio_qopt *qopt = 0;
+	__u32 preempt = UINT32_MAX;
 	int i;
 
 	if (opt == NULL)
@@ -624,6 +639,22 @@ static int taprio_print_opt(struct qdisc_util *qu, FILE *f, struct rtattr *opt)
 
 	print_nl();
 
+	if (tb[TCA_TAPRIO_ATTR_PREEMPT_TCS])
+		preempt = rta_getattr_u32(tb[TCA_TAPRIO_ATTR_PREEMPT_TCS]);
+
+	if (preempt != UINT32_MAX) {
+		open_json_array(PRINT_ANY, "preemptible");
+		for (i = 0; i < TC_QOPT_MAX_QUEUE; i++) {
+			open_json_object(NULL);
+			bool preemptible = preempt & BIT(i);
+			print_uint(PRINT_ANY, "queue", " %d", preemptible);
+			close_json_object();
+		}
+		close_json_array(PRINT_ANY, "");
+
+		print_nl();
+	}
+
 	if (tb[TCA_TAPRIO_ATTR_SCHED_CLOCKID]) {
 		__s32 clockid;
 
-- 
2.34.1